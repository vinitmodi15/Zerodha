{"ast":null,"code":"// import React, { useState } from \"react\";\n\n// import BuyActionWindow from \"./BuyActionWindow\";\n\n// const GeneralContext = React.createContext({\n// //   openBuyWindow: (uid) => {},\n// //   closeBuyWindow: () => {},\n// });\n\n// export const GeneralContextProvider = (props) => {\n//   const [isBuyWindowOpen, setIsBuyWindowOpen] = useState(false);\n//   const [selectedStockUID, setSelectedStockUID] = useState(\"\");\n\n//   const handleOpenBuyWindow = (uid) => {\n//     setIsBuyWindowOpen(true);\n//     setSelectedStockUID(uid);\n//   };\n\n//   const handleCloseBuyWindow = () => {\n//     setIsBuyWindowOpen(false);\n//     setSelectedStockUID(\"\");\n//   };\n\n//   return (\n//     <GeneralContext.Provider\n//       value={{\n//         openBuyWindow: handleOpenBuyWindow,\n//         closeBuyWindow: handleCloseBuyWindow,\n//       }}\n//     >\n//       {props.children}\n//       {isBuyWindowOpen && <BuyActionWindow uid={selectedStockUID} />}\n//     </GeneralContext.Provider>\n//   );\n// };\n\n// export default GeneralContext;","map":{"version":3,"names":[],"sources":["D:/Zerodha/dashboard/src/components/GeneralContext.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n\r\n// import BuyActionWindow from \"./BuyActionWindow\";\r\n\r\n// const GeneralContext = React.createContext({\r\n// //   openBuyWindow: (uid) => {},\r\n// //   closeBuyWindow: () => {},\r\n// });\r\n\r\n// export const GeneralContextProvider = (props) => {\r\n//   const [isBuyWindowOpen, setIsBuyWindowOpen] = useState(false);\r\n//   const [selectedStockUID, setSelectedStockUID] = useState(\"\");\r\n\r\n//   const handleOpenBuyWindow = (uid) => {\r\n//     setIsBuyWindowOpen(true);\r\n//     setSelectedStockUID(uid);\r\n//   };\r\n\r\n//   const handleCloseBuyWindow = () => {\r\n//     setIsBuyWindowOpen(false);\r\n//     setSelectedStockUID(\"\");\r\n//   };\r\n\r\n//   return (\r\n//     <GeneralContext.Provider\r\n//       value={{\r\n//         openBuyWindow: handleOpenBuyWindow,\r\n//         closeBuyWindow: handleCloseBuyWindow,\r\n//       }}\r\n//     >\r\n//       {props.children}\r\n//       {isBuyWindowOpen && <BuyActionWindow uid={selectedStockUID} />}\r\n//     </GeneralContext.Provider>\r\n//   );\r\n// };\r\n\r\n// export default GeneralContext;"],"mappings":"AAAA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}